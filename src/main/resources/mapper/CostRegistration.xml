<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jp.co.lyc.cms.mapper.CostRegistrationMapper">
	<resultMap id="CostRegistration"
		type="jp.co.lyc.cms.model.CostRegistrationModel" />
	<select id="selectCostRegistration" resultMap="CostRegistration"
		parameterType="String">
		SELECT
		(@rowNo:=@rowNo + 1) AS rowNo,
		employeeNo,
		yearMonth,
		regularStatus,
		happendDate,
		costClassificationCode,
		dueDate,
		detailedNameOrLine,
		stationCode,
		originCode,
		transportationCode,
		destinationCode,
		cost,
		remark,
		CONVERT (costFile USING utf8)costFile,
		updateTime,
		createTime,
		updateUser
		FROM
		T020CostInfo
		,(SELECT @rowNo:=0) AS rowNo
		WHERE
		<!-- happendDate >= DATE_ADD(curdate(),interval -day(curdate())+1 day) 
			AND -->
		yearMonth = #{yearMonth} AND
		employeeNo = #{employeeNo}
		ORDER BY
		happendDate
	</select>
	
	<select id="selectApprovalStatus" resultMap="CostRegistration"
		parameterType="String">
		SELECT
		approvalStatus
		FROM
		T018WorkTotalTime
		WHERE
		employeeNo = #{employeeNo} AND
		attendanceYearAndMonth = #{yearMonth}
	</select>
	
	<select id="selectCheckCostRegistration"
		resultMap="CostRegistration" parameterType="map">
		SELECT
		employeeNo
		FROM
		T020CostInfo
		WHERE
		employeeNo = #{employeeNo} AND
		yearMonth = #{yearMonth} AND
		happendDate = #{happendDate} AND
		costClassificationCode = #{costClassificationCode}
	</select>

	<insert id="insertCostRegistration" parameterType="map">
		INSERT INTO
		T020CostInfo(
		employeeNo,
		yearMonth,
		regularStatus,
		happendDate,
		costClassificationCode,
		dueDate,
		detailedNameOrLine,
		stationCode,
		originCode,
		transportationCode,
		destinationCode,
		cost,
		remark,
		costFile,
		updateTime,
		createTime,
		updateUser)
		VALUE(
		#{employeeNo},
		#{yearMonth},
		#{regularStatus},
		#{happendDate},
		#{costClassificationCode},
		#{dueDate},
		#{detailedNameOrLine},
		#{stationCode},
		#{originCode},
		#{transportationCode},
		#{destinationCode},
		#{cost},
		#{remark},
		#{costFile},
		date_add(now(), interval 9 hour),
		date_add(now(), interval 9 hour),
		#{employeeName})
	</insert>
	<update id="updateCostRegistration" parameterType="map">
		UPDATE
		T020CostInfo
		SET
		regularStatus = ifnull(#{regularStatus},regularStatus),
		happendDate = ifnull(#{happendDate},happendDate),
		costClassificationCode = ifnull(#{costClassificationCode},costClassificationCode),
		dueDate = ifnull(#{dueDate},dueDate),
		detailedNameOrLine = ifnull(#{detailedNameOrLine},detailedNameOrLine),
		stationCode = ifnull(#{stationCode},stationCode),
		originCode = ifnull(#{originCode},originCode),
		transportationCode = ifnull(#{transportationCode},transportationCode),
		destinationCode = ifnull(#{destinationCode},destinationCode),
		cost = ifnull(#{cost},cost),
		remark = ifnull(#{remark},remark),
		costFile = ifnull(#{costFile},costFile),
		updateTime = date_add(now(), interval 9 hour),
		createTime = createTime,
		updateUser = ifnull(#{employeeName},updateUser)
		WHERE
		employeeNo = #{employeeNo}
		and yearMonth = #{yearMonth}
		and happendDate = #{oldHappendDate}
		and costClassificationCode = #{oldCostClassificationCode}
	</update>
	<delete id="deleteCostRegistration" parameterType="map">
		DELETE FROM
		T020CostInfo
		WHERE
		employeeNo = #{employeeNo}
		AND
		yearMonth = #{yearMonth}
		AND
		happendDate = #{oldHappendDate}
		AND
		costClassificationCode = #{oldCostClassificationCode}
	</delete>
</mapper>